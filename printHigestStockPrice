package globalLogic;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import au.com.bytecode.opencsv.CSVReader;

public class PrintHigestStockPrice {
	
	public  String calculateHigestPrice() {
		String[] row = null;
		File f=new File("csvfile/SampleDocument.csv");
		
		InputStream iS = null;
		try {
			iS = new FileInputStream(f);
		
		
		CSVReader reader = new CSVReader(new InputStreamReader(iS)	);
		List content = reader.readAll();
		 int i=0;
		for (Object object : content) {
			if(i!=0){
		    row = (String[]) object;
		     
		    System.out.println(row[0] + " # " + row[1]
		               + " #  " + row[2]+"#"+row[3] + " # " + row[4]
				               + " #  " + row[5]+"#"+row[6]+"#"+row[7]);
		    Map<String,Integer> map=new HashMap<String,Integer>();
		    map.put("companyA",Integer.parseInt( row[2]));
		    map.put("companyB",Integer.parseInt( row[3]));
		    map.put("companyC",Integer.parseInt( row[4]));
		    map.put("companyD",Integer.parseInt( row[5]));
		    map.put("companyC",Integer.parseInt( row[6]));
		    map.put("companyD",Integer.parseInt( row[7]));
		    ValueComparator bvc =  new ValueComparator(map);
	        TreeMap<String,Integer> sorted_map = new TreeMap<String,Integer>(bvc);
	        sorted_map.putAll(map);
	        
	        System.out.println(row[0] + " # " + row[1]+"#"+sorted_map.firstKey());
	        
	        return sorted_map.firstKey();
		}
		i++;}
} catch (IOException e) {
			
			e.printStackTrace();
		}
		return null;
		
	}

}

class ValueComparator implements Comparator<String> {

    Map<String, Integer> base;
    public ValueComparator(Map<String, Integer> map) {
        this.base = map;
    }

       
    public int compare(String a, String b) {
        if (base.get(a) >= base.get(b)) {
            return -1;
        } else {
            return 1;
        } 
    }
}
